---
resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
- name: pr
  type: pull-request
  icon: source-pull
  check_every: 30s
  source:
    repository: codigube/blouger
    access_token: ((github_access_token))

- name: master
  type: git
  icon: github
  check_every: 30s
  source:
    uri: https://github.com/codigube/blouger.git
    branch: master

- name: release
  type: git
  icon: github
  check_every: 30s
  source:
    uri: https://github.com/codigube/blouger.git
    branch: master
    # Works with Github Release not `git tag`
    tag_filter: v*

jobs:
  - name: terraform-pr
    plan:
      - get: pr
        trigger: true

      - put: pr
        params:
          path: pr
          status: pending

      - task: validate-tf          
        file: pr/.ci/tasks/tf-validate.yml
        input_mapping: { source-code: pr }
        params:
          AWS_ACCESS_KEY: ((aws_access_key))
          AWS_SECRET_KEY: ((aws_secret_key))
        on_failure:
          put: pr
          params:
            path: pr
            status: failure

      - task: plan-tf
        file: pr/.ci/tasks/tf-plan.yml
        input_mapping: { source-code: pr }
        params:
          AWS_ACCESS_KEY: ((aws_access_key))
          AWS_SECRET_KEY: ((aws_secret_key))
        on_failure:
          put: pr
          params:
            path: pr
            status: failure
        on_success:
          put: pr
          params:
            path: pr
            status: success

  - name: terraform-master
    plan:
      - get: master
        trigger: true

      - task: validate-tf          
        file: master/.ci/tasks/tf-validate.yml
        input_mapping: { source-code: master }
        params:
          AWS_ACCESS_KEY: ((aws_access_key))
          AWS_SECRET_KEY: ((aws_secret_key))

      - task: plan-tf
        file: master/.ci/tasks/tf-plan.yml
        input_mapping: { source-code: master }
        params:
          AWS_ACCESS_KEY: ((aws_access_key))
          AWS_SECRET_KEY: ((aws_secret_key))
  
  - name: terraform-deployment
    plan:
      - get: release
        trigger: true

      - task: plan-tf
        file: release/.ci/tasks/tf-deploy.yml
        input_mapping: { source-code: release }
        params:
          AWS_ACCESS_KEY: ((aws_access_key))
          AWS_SECRET_KEY: ((aws_secret_key))
      